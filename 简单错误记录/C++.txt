#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <list>
using namespace std;

struct ErrorLog{
    string name;
    string line;
    int count;
};
// 创建错误日志实体
ErrorLog CreateErrorLog(string name,string line){
    ErrorLog log;
    int nameSize = name.size();
    int index = -1;
    // 寻找\下标
    for(int i = nameSize - 1;i >= 0;--i){
        if(name[i] == '\\'){
            index = i;
            break;
        }//if
    }//for
    // 文件名
    name = name.substr(index+1);
    nameSize = name.size();
    // 只记录文件的最后有效16个字符
    if(nameSize > 16){
        name = name.substr(nameSize-16);
    }//if
    log.name = name;
    log.line = line;
    log.count = 1;
    return log;
}
// 记录错误日志
void RecordErrorLog(int &number,ErrorLog log,vector<ErrorLog> &result){
    int size = result.size();
    bool isRepeat = false;
    for(int i = 0;i < size;++i){
        if(log.name == result[i].name && log.line == result[i].line){
            ++result[i].count;
            isRepeat = true;
            break;
        }//if
    }//for
    if(!isRepeat){
        if(size < 8){
            result.push_back(log);
        }//if
        else{
            result[number%8] = log;
        }//else
        ++number;
    }//if
}

int main(){
    string str;
    //freopen("C:\\Users\\Administrator\\Desktop\\c++.txt","r",stdin);
    vector<ErrorLog> result;
    string name,line;

    int number = 0;
    while(cin>>name>>line){
        ErrorLog log = CreateErrorLog(name,line);
        RecordErrorLog(number,log,result);
    }//while

    //输出
    for(int i = 0;i < result.size();++i){
        cout<<result[i].name<<" "<<result[i].line<<" "<<result[i].count<<endl;
    }//for
    return 0;
}